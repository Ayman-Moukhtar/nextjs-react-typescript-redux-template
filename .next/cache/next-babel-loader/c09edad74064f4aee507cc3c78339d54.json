{"ast":null,"code":"const async = (action, worker) => (dispatch, params) => {\n  dispatch(action.started(params));\n  return worker(params).then(result => dispatch(action.done({\n    params,\n    result\n  }))).catch(error => dispatch(action.failed({\n    params,\n    error\n  })));\n};\n\nexport { async };","map":{"version":3,"sources":["C:/Personal/Work/next-demo/src/helpers/shared/async-action.ts"],"names":["async","action","worker","dispatch","params","started","then","result","done","catch","error","failed"],"mappings":"AAIA,MAAMA,KAAK,GAAG,CACVC,MADU,EAEVC,MAFU,KAGT,CACDC,QADC,EAEDC,MAFC,KAGA;AACGD,EAAAA,QAAQ,CAACF,MAAM,CAACI,OAAP,CAAeD,MAAf,CAAD,CAAR;AAEA,SAAOF,MAAM,CAACE,MAAD,CAAN,CACFE,IADE,CACGC,MAAM,IACRJ,QAAQ,CAACF,MAAM,CAACO,IAAP,CAAY;AAAEJ,IAAAA,MAAF;AAAUG,IAAAA;AAAV,GAAZ,CAAD,CAFT,EAIFE,KAJE,CAIIC,KAAK,IACRP,QAAQ,CAACF,MAAM,CAACU,MAAP,CAAc;AAAEP,IAAAA,MAAF;AAAUM,IAAAA;AAAV,GAAd,CAAD,CALT,CAAP;AAOH,CAhBL;;AAkBA,SACIV,KADJ","sourcesContent":["import { Dispatch } from \"react\";\r\nimport { AnyAction } from \"redux\";\r\nimport { AsyncActionCreators } from \"typescript-fsa\";\r\n\r\nconst async = <TParameters, TSuccess, TError>(\r\n    action: AsyncActionCreators<TParameters | undefined, TSuccess, TError>,\r\n    worker: (params?: TParameters) => Promise<TSuccess>\r\n) => (\r\n    dispatch: Dispatch<AnyAction>,\r\n    params?: TParameters\r\n) => {\r\n        dispatch(action.started(params));\r\n\r\n        return worker(params)\r\n            .then(result =>\r\n                dispatch(action.done({ params, result }))\r\n            )\r\n            .catch(error =>\r\n                dispatch(action.failed({ params, error }))\r\n            );\r\n    };\r\n\r\nexport {\r\n    async\r\n};"]},"metadata":{},"sourceType":"module"}