{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeTitleAction, getDataAsync } from \"../../actions\";\n\nconst useHomeState = () => {\n  const state = useSelector(({\n    home\n  }) => home);\n  const dispatch = useDispatch();\n  return _objectSpread({}, state, {\n    changeTitle: newTitle => dispatch(changeTitleAction(newTitle)),\n    getData: () => getDataAsync(dispatch)\n  });\n};\n\nexport { useHomeState };","map":{"version":3,"sources":["C:/Personal/Work/next-demo/src/components/Home/hooks.ts"],"names":["useDispatch","useSelector","changeTitleAction","getDataAsync","useHomeState","state","home","dispatch","changeTitle","newTitle","getData"],"mappings":";;;;;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,iBAAT,EAA4BC,YAA5B,QAAgD,eAAhD;;AAIA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAMC,KAAK,GAAGJ,WAAW,CAA2B,CAAC;AAAEK,IAAAA;AAAF,GAAD,KAAcA,IAAzC,CAAzB;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,2BACOK,KADP;AAEIG,IAAAA,WAAW,EAAGC,QAAD,IAAsBF,QAAQ,CAACL,iBAAiB,CAACO,QAAD,CAAlB,CAF/C;AAGIC,IAAAA,OAAO,EAAE,MAAMP,YAAY,CAACI,QAAD;AAH/B;AAKH,CATD;;AAWA,SACIH,YADJ","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport { changeTitleAction, getDataAsync } from \"../../actions\";\r\nimport { THomeState } from \"../../types\";\r\nimport { TGlobalState } from \"../Layout\";\r\n\r\nconst useHomeState = () => {\r\n    const state = useSelector<TGlobalState, THomeState>(({ home }) => home);\r\n    const dispatch = useDispatch();\r\n\r\n    return {\r\n        ...state,\r\n        changeTitle: (newTitle: string) => dispatch(changeTitleAction(newTitle)),\r\n        getData: () => getDataAsync(dispatch)\r\n    };\r\n};\r\n\r\nexport {\r\n    useHomeState\r\n};"]},"metadata":{},"sourceType":"module"}