{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { isType } from \"typescript-fsa\";\nimport { changeTitleAction, getDataAction } from \"../actions\";\nconst initialState = {\n  title: 'This is home page title',\n  data: []\n};\n\nconst homeReducer = (state = initialState, action) => {\n  if (isType(action, changeTitleAction)) {\n    return _objectSpread({}, state, {\n      title: action.payload\n    });\n  }\n\n  if (isType(action, getDataAction.started)) {\n    // Do data loading ui work if needed.\n    return _objectSpread({}, state);\n  }\n\n  if (isType(action, getDataAction.done)) {\n    return _objectSpread({}, state, {\n      data: action.payload.result\n    });\n  }\n\n  if (isType(action, getDataAction.failed)) {\n    // Do error handling work if needed\n    return _objectSpread({}, state);\n  }\n\n  return state;\n};\n\nexport { homeReducer };","map":{"version":3,"sources":["C:/Personal/Work/next-demo/src/reducers/home.ts"],"names":["isType","changeTitleAction","getDataAction","initialState","title","data","homeReducer","state","action","payload","started","done","result","failed"],"mappings":";;;;;;;;;;;;AAAA,SAAoBA,MAApB,QAAkC,gBAAlC;AAEA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,YAAjD;AAGA,MAAMC,YAAwB,GAAG;AAC7BC,EAAAA,KAAK,EAAE,yBADsB;AAE7BC,EAAAA,IAAI,EAAE;AAFuB,CAAjC;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAiB,GAAGJ,YAArB,EAAmCK,MAAnC,KAAqE;AAErF,MAAIR,MAAM,CAACQ,MAAD,EAASP,iBAAT,CAAV,EAAuC;AACnC,6BACOM,KADP;AAEIH,MAAAA,KAAK,EAAEI,MAAM,CAACC;AAFlB;AAIH;;AAED,MAAIT,MAAM,CAACQ,MAAD,EAASN,aAAa,CAACQ,OAAvB,CAAV,EAA2C;AACvC;AACA,6BACOH,KADP;AAGH;;AAED,MAAIP,MAAM,CAACQ,MAAD,EAASN,aAAa,CAACS,IAAvB,CAAV,EAAwC;AACpC,6BACOJ,KADP;AAEIF,MAAAA,IAAI,EAAEG,MAAM,CAACC,OAAP,CAAeG;AAFzB;AAIH;;AAED,MAAIZ,MAAM,CAACQ,MAAD,EAASN,aAAa,CAACW,MAAvB,CAAV,EAA0C;AACtC;AACA,6BACON,KADP;AAGH;;AAED,SAAOA,KAAP;AACH,CA/BD;;AAiCA,SACID,WADJ","sourcesContent":["import { AnyAction, isType } from \"typescript-fsa\";\r\n\r\nimport { changeTitleAction, getDataAction } from \"../actions\";\r\nimport { THomeState } from \"../types\";\r\n\r\nconst initialState: THomeState = {\r\n    title: 'This is home page title',\r\n    data: []\r\n};\r\n\r\nconst homeReducer = (state: THomeState = initialState, action: AnyAction): THomeState => {\r\n    \r\n    if (isType(action, changeTitleAction)) {\r\n        return {\r\n            ...state,\r\n            title: action.payload\r\n        };\r\n    }\r\n\r\n    if (isType(action, getDataAction.started)) {\r\n        // Do data loading ui work if needed.\r\n        return {\r\n            ...state\r\n        };\r\n    }\r\n\r\n    if (isType(action, getDataAction.done)) {\r\n        return {\r\n            ...state,\r\n            data: action.payload.result\r\n        };\r\n    }\r\n\r\n    if (isType(action, getDataAction.failed)) {\r\n        // Do error handling work if needed\r\n        return {\r\n            ...state\r\n        };\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\nexport {\r\n    homeReducer\r\n};"]},"metadata":{},"sourceType":"module"}