{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys(object);\n\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (_Object$getOwnPropertyDescriptors) {\n      _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { isType } from \"typescript-fsa\";\nimport { changeTitleAction, getDataAction } from \"../actions\";\nvar initialState = {\n  title: 'This is home page title',\n  data: []\n};\n\nvar homeReducer = function homeReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (isType(action, changeTitleAction)) {\n    return _objectSpread({}, state, {\n      title: action.payload\n    });\n  }\n\n  if (isType(action, getDataAction.started)) {\n    // Do data loading ui work if needed.\n    return _objectSpread({}, state);\n  }\n\n  if (isType(action, getDataAction.done)) {\n    return _objectSpread({}, state, {\n      data: action.payload.result\n    });\n  }\n\n  if (isType(action, getDataAction.failed)) {\n    // Do error handling work if needed\n    return _objectSpread({}, state);\n  }\n\n  return state;\n};\n\nexport { homeReducer };","map":{"version":3,"sources":["C:/Personal/Work/next-demo/src/reducers/home.ts"],"names":["initialState","title","data","homeReducer","state","action","isType","payload","getDataAction","result"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,MAAA,QAAA,gBAAA;AAGA,SAAA,iBAAA,EAAA,aAAA,QAAA,YAAA;AAEA,IAAMA,YAAwB,GAAG;AAC7BC,EAAAA,KAAK,EADwB,yBAAA;AAE7BC,EAAAA,IAAI,EAAE;AAFuB,CAAjC;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAqE;AAAA,MAApEC,KAAoE,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAhDJ,YAAgD;AAAA,MAAlCK,MAAkC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA;;AAErF,MAAIC,MAAM,CAAA,MAAA,EAAV,iBAAU,CAAV,EAAuC;AACnC,WAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEIL,MAAAA,KAAK,EAAEI,MAAM,CAACE;AAFlB,KAAA,CAAA;AAIH;;AAED,MAAID,MAAM,CAAA,MAAA,EAASE,aAAa,CAAhC,OAAU,CAAV,EAA2C;AACvC;AACA,WAAA,aAAA,CAAA,EAAA,EAAA,KAAA,CAAA;AAGH;;AAED,MAAIF,MAAM,CAAA,MAAA,EAASE,aAAa,CAAhC,IAAU,CAAV,EAAwC;AACpC,WAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEIN,MAAAA,IAAI,EAAEG,MAAM,CAANA,OAAAA,CAAeI;AAFzB,KAAA,CAAA;AAIH;;AAED,MAAIH,MAAM,CAAA,MAAA,EAASE,aAAa,CAAhC,MAAU,CAAV,EAA0C;AACtC;AACA,WAAA,aAAA,CAAA,EAAA,EAAA,KAAA,CAAA;AAGH;;AAED,SAAA,KAAA;AA9BJ,CAAA;;AAiCA,SAAA,WAAA","sourcesContent":["import { AnyAction, isType } from \"typescript-fsa\";\r\n\r\nimport { THomeState } from \"../types\";\r\nimport { changeTitleAction, getDataAction } from \"../actions\";\r\n\r\nconst initialState: THomeState = {\r\n    title: 'This is home page title',\r\n    data: []\r\n};\r\n\r\nconst homeReducer = (state: THomeState = initialState, action: AnyAction): THomeState => {\r\n    \r\n    if (isType(action, changeTitleAction)) {\r\n        return {\r\n            ...state,\r\n            title: action.payload\r\n        };\r\n    }\r\n\r\n    if (isType(action, getDataAction.started)) {\r\n        // Do data loading ui work if needed.\r\n        return {\r\n            ...state\r\n        };\r\n    }\r\n\r\n    if (isType(action, getDataAction.done)) {\r\n        return {\r\n            ...state,\r\n            data: action.payload.result\r\n        };\r\n    }\r\n\r\n    if (isType(action, getDataAction.failed)) {\r\n        // Do error handling work if needed\r\n        return {\r\n            ...state\r\n        };\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\nexport {\r\n    homeReducer\r\n};"]},"metadata":{},"sourceType":"module"}